<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta http-equiv="X-UA-Compatible" content="ie=edge" />
	<link rel="shortcut icon" href="pabel.png" type="image/x-icon" />
	<title>TOTP past auto copy</title>
	<style>
		body {
			margin: 0;
			font-family: Arial, sans-serif;
		}

		.container {
		  width: 60%;
			background: #fff;
			padding: 20px;
			border-radius: 10px;
			box-shadow: 0 0 10px black;
			position: relative;
			display: block;
			margin: 20px auto;
		}
		
		.form{
		  display: flex;
		  flex-direction: column;
		}

		h2 {
			text-align: center;
			margin-bottom: 20px;
			color: #333;
		}

		form {
			display: flex;
			gap: 10px;
			margin-bottom: 20px;
		}

		input[type="text"] {
			flex: 1;
			padding: 10px;
			border: 1px solid #ccc;
			border-radius: 5px;
			font-size: 16px;
		}

		button {
			padding: 10px 15px;
			background: #007bff;
			color: white;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			transition: background 0.3s ease;
		}

		button:hover {
			background: #0056b3;
		}

		.secretDiv, .code {
			display: flex;
			gap: 10px;
			margin-bottom: 15px;
			justify-content: center;
		}
		#code{
		  border: 2px solid #000;
		  display: block;
		  width: 60px;
		  text-align: center;
		  border-radius: 10px;
		}
		#second{
		  position: absolute;
		  width: 40px;
		  top: 0;
		  left: 0;
		  border: 0;
		  margin: 10px;
		  font-size: 20px;
		  font-weight: bold;
		}
		
    .link{
      margin-top: 20px;
      display: flex;
      flex-direction: column;
    }
    a{
      margin-top: 5px;
    }
    #message.active{
      display: block;
      width: 200px;
      height: 20px;
      padding: 10px;
      border-radius: 5px;
      position: absolute;
      top: 10%;
      left: 10%;
      background: #0056b3;
      color: white;
      text-align: center;
    }
    #message.delete{
      display: none;
    }
	</style>
</head>
<body>
	<div class="container">
	  <span id="message" class="delete">Message</span>
		<h2>TOTP Generator</h2>
		<form class="form" action="/" method="post">
			<input id="secret" type="text" name="secret" placeholder="Enter Secret" required value="<%= secret %>" />
			<button type="submit">Submit</button>
		</form>

		

		<div class="code">
			<input id="code" value="<%= otp %>" readonly  placeholder="O"/>
			<button id="codeCopy">Copy</button>
		</div>
		
		<div class="second">
			<input id="second" value="" readonly />
			<button id="refresh">Refresh</button>
		</div>
		
		
		<div class="link">
		  <a href="/facebook">Facebook UID Extractor</a>
		  <a href="/random">Random Name Generator</a>
		</div>
	</div>

  <script>
  const secret = document.getElementById('secret');
  const code = document.getElementById('code');
  const codeCopy = document.getElementById('codeCopy');
  const second = document.getElementById('second');
  const refresh = document.getElementById('refresh');
  const message = document.getElementById('message');
  
  secret.addEventListener('click', () => {
    secret.value = '';
  })
  // প্রতি keyup এ form সাবমিট
  secret.addEventListener('keyup', () => {
    const val = secret.value.trim();
    if (val) {
      submitSecret(val);
    }
  });

  // কোড কপি করার বাটন
  codeCopy.addEventListener('click', () => {
    if (code.value) {
      navigator.clipboard.writeText(code.value)
         then(() => alert('Code copied: ' + code.value))
        
        .catch(err => console.error('Failed to copy:', err));
    }
  });

  // রিফ্রেশ বাটন
  refresh.addEventListener('click', () => {
    location.reload();
  });

  // সাবমিট ফাংশন (AJAX + DOM Update)
  async function submitSecret(value) {
    try {
      const response = await fetch("/", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        body: `secret=${encodeURIComponent(value)}`
      });

      const html = await response.text();
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, "text/html");

      const newCode = doc.querySelector('#code')?.value || '';
      const newSecond = parseInt(doc.querySelector('#second')?.value) || 30;

      if (newCode && newCode !== 'Error') {
        code.value = newCode;
        await navigator.clipboard.writeText(newCode);
        
        message.innerHTML = `Copy: ${code.value}`;
        message.classList.remove('delete');
        message.classList.add('active');
        setTimeout(() => {
          message.classList.add('delete');
        }, 3000);
        
        let secondsLeft = newSecond;
        const interval = setInterval(() => {
          second.value = secondsLeft;
          secondsLeft--;

          if (secondsLeft < 0) {
            clearInterval(interval);
            location.reload();
          }
        }, 1000);
      } else {
        alert('OTP Generation failed!');
      }
    } catch (err) {
      console.error("Submission Error:", err);
    }
  }

  // প্রথমবার পেজ লোড হলে countdown শুরু
  if (code.value && code.value !== 'Error') {
    let secondsLeft = <%= typeof second !== 'undefined' ? second : 30 %>;

    const interval = setInterval(() => {
      second.value = secondsLeft;
      secondsLeft--;

      if (secondsLeft < 0) {
        clearInterval(interval);
        location.reload();
      }
    }, 1000);
  }
</script>
</body>
</html>